@page "/"
@layout Pages.Emptylayout
@inject NavigationManager NavigationManager
<PageTitle>Home</PageTitle>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<link rel="stylesheet" href="/css/Logincss.css"/>


    <div class="container" id="container">
        <div class="form-container sign-in">
            <EditForm Model="@this" OnValidSubmit="PerformLogin">
                <h1>inicar sesion</h1>
                <InputText id="email" @bind-Value="Email" type="email" placeholder="Correo electr칩nico" />
                <InputText id="password" @bind-Value="Password" type="password" placeholder="Contrase침a" />
                <button type="submit">Iniciar sesion</button>
            </EditForm>
        </div>
        <div class="toggle-container">
            <div class="toggle">
                <div class="toggle-panel toggle-right">
                    <img src="/login2.jpg" alt="Image" class="imagenlogologin" />
                    <h1>Bienvenido!</h1>
                    <p>Registrate apretando aqui abajo!</p>
                    <button class="hidden" id="register" @onclick="registro">REGISTRARSE</button>
                </div>
            </div>
        </div>
    </div>

@code {
   string Email = "";
    string Password = "";

[Inject]
public IJSRuntime JSRuntime { get; set; }

async Task PerformLogin()
{
    try {
        var userId = await JSRuntime.InvokeAsync<string>("loginUser", Email, Password);
        if (userId != null) {
            await JSRuntime.InvokeVoidAsync("alertaLogin", "Inicio de sesi칩n exitoso!"); // Llama a la funci칩n de alerta
            NavigationManager.NavigateTo("/home");
            Console.WriteLine($"User ID: {userId}");
        } else {
            
        }
    } catch (Exception exception) {
        // Manejar errores
        
    }
}

private void registro()
{
    NavigationManager.NavigateTo("/registro");
}
}